
@model McAttributes.Pages.UserIssues._AssociatedAccountsModel
@{
}


<div id="associatedPartial">
@*
    @if (Model.AssociatedUsers.Count() > 0) {
        <table id="accountsTable" class="table table-bordered table-hover">
            <tbody>
                @foreach (var p in Model.AssociatedUsers.First().GetType().GetProperties().Where(x => x.Name != "Version")) {
                    <tr>
                        <th>@p.Name</th>
                        @foreach (var a in Model.AssociatedUsers.OrderBy(x => x.Tenant)) {
                            <td >@p.GetValue(a)</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    }
    else {
        <p>No Associated Accounts Loaded.</p>
        if (Model._acctNames.Count() > 0) {
            <p>@Model._acctNames.Count() account names identified but fetching from database failed.</p>
        }
    }*@
</div>
<div id="app" class="container-fluid">
    <div class="row">
        <div class="col-sm-6">

            <div class="card" draggable="true" v-for="a of accounts">
                {{ a.DisplayName }} {{ a.Tenant }}
            </div>
        </div>
        <div class="col-sm-6">
            buckets
            <div class="card" v-for="b of buckets">
                {{ b }}
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    const bucketAppDefinition = {
        data() {
            return {
                status: "Loaded",
                accounts: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.AssociatedUsers)),
                buckets: [ 'foo', 'bar' ]
            }
        },
        methods: {
            
        },
        watch: {
        },
    };

    const bucketApp = createApp(bucketAppDefinition);
    bucketApp.config.compilerOptions.isCustomElement = (tag) => tag.includes('-')
    bucketApp.mount('#app');
</script>